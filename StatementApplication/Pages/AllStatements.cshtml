@page
@model StatementApplication.Pages.AllStatementsModel
@{
}

<!-- Container with padding for space around content -->
<div class="container my-5">
    <h1 class="text-center text-dark mb-4">Your Applications</h1>

    <!-- Accordion for displaying applications -->
    <div class="accordion" id="applicationsAccordion">
        @foreach (var application in Model.Applications)
        {
            <div class="accordion-item mb-3">
                <!-- Accordion Header -->
                <h2 class="accordion-header" id="heading-@application.ApplicationId">
                    <button class="accordion-button collapsed text-dark bg-light"
                            type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapse-@application.ApplicationId"
                            aria-expanded="false" aria-controls="collapse-@application.ApplicationId">
                        <div class="d-flex justify-content-between w-100">
                            <span class="fw-bold">Application ID: @application.ApplicationId</span>
                            <span>Status: <span class="badge @GetStatusBadgeClass(application.Status)">@application.Status</span></span>
                        </div>
                    </button>
                </h2>

                <!-- Accordion Body -->
                <div id="collapse-@application.ApplicationId" class="accordion-collapse collapse"
                     aria-labelledby="heading-@application.ApplicationId" data-bs-parent="#applicationsAccordion">
                    <div class="accordion-body bg-light">
                        <!-- Statements Section -->
                        <div class="mb-3">
                            <h5 class="text-dark">Statements</h5>
                            <ul class="list-unstyled">
                                @foreach (var statement in application.Statements)
                                {
                                    <li class="d-flex justify-content-between align-items-center mb-2">
                                        <span>@statement.Type</span>
                                        <span class="badge @GetStatusBadgeClass(statement.Status)">@statement.Status</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Method for Badge Styling -->
@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
